@import 'options'; // EDIT STYLES AND OPTIONS IN _options.scss
@import 'danger';
@import 'glow';


//////////////////////////////////////////////////////////
// "INHERIT-SAFE" FONT SIZES /////////////////////////////
//////////////////////////////////////////////////////////
// If user elects to use font-size: inherit in _options
// leave out calcs which result in inherit2 etc.
$unicorn-btn-smallfs: inherit;
$unicorn-btn-tinyfs: inherit;
$unicorn-btn-largefs: inherit;
@if $unicorn-btn-font-size != inherit {
    $unicorn-btn-largefs: $unicorn-btn-font-size + 5;
    $unicorn-btn-tinyfs: $unicorn-btn-font-size - 2;
    $unicorn-btn-smallfs: $unicorn-btn-font-size + 1;
}

//////////////////////////////////////////////////////////
// BUTTON BASE STYLES ////////////////////////////////////
//////////////////////////////////////////////////////////
#{$unicorn-btn-namespace} {
    box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .5), 0px 1px 2px rgba(0, 0, 0, .15);
    background-color: $unicorn-btn-bgcolor;
    // background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
    background: linear-gradient(to bottom, lighten($unicorn-btn-bgcolor, 5%) 0%, darken($unicorn-btn-bgcolor, 5%) 100%);
    display: inline-block;
    border: 1px solid darken($unicorn-btn-bgcolor, 10%);
    height: $unicorn-btn-height;
    line-height: $unicorn-btn-height;
    padding: 0px ($unicorn-btn-height * .8);
    font-weight: $unicorn-btn-font-weight;
    font-size: $unicorn-btn-font-size;
    font-family: $unicorn-btn-font-family;
    color:  $unicorn-btn-font-color;
    text-shadow: 0 1px 1px rgba(255, 255, 255, 1);
    margin: 0;
    text-decoration: none;
    text-align: center;

    &:hover, &:focus {
        background-color: $unicorn-btn-bgcolor;
        background: linear-gradient(to bottom, lighten($unicorn-btn-bgcolor, 10%) 0%, darken($unicorn-btn-bgcolor, 7%) 100%);

    }
    &:active {
        box-shadow: inset 0px 1px 3px rgba(0, 0, 0, .3), 0px 1px 0px rgba(255, 255, 255, 1);
        text-shadow: 0px 1px 0px rgba(255, 255, 255, .4);
        background: desaturate($unicorn-btn-bgcolor, 20%);
        color: darken($unicorn-btn-bgcolor, 20%);
    }
    &:focus {
        outline: none;
    }
}

//HEIGHT NEEDED FOR FORM ELEMENTS
input#{$unicorn-btn-namespace}, button#{$unicorn-btn-namespace} {
    height: $unicorn-btn-height + 2;
    cursor: pointer;
    -webkit-appearance: none;
}

// BLOCK BUTTON
#{$unicorn-btn-namespace}-block {
    display: block;
}

// DISABLED STATE
#{$unicorn-btn-namespace}.disabled,
#{$unicorn-btn-namespace}.disabled:hover,
#{$unicorn-btn-namespace}.disabled:focus,
#{$unicorn-btn-namespace}.disabled:active,
input#{$unicorn-btn-namespace}:disabled,
button#{$unicorn-btn-namespace}:disabled {
    box-shadow: 0px 1px 2px rgba(0, 0, 0, .10);
    opacity: .8;
    background: #EEE;
    border: 1px solid #DDD;
    text-shadow: 0 1px 1px rgba(255, 255, 255, 1);
    color: #CCC;
    cursor: default;
    -webkit-appearance: none;
}

// WRAPPER EFFECT
#{$unicorn-btn-namespace}-wrap {
    background: linear-gradient(to bottom, lighten(#e3e3e3, 10%), darken(#f2f2f2, 7%));
    border-radius: 200px;
    box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.04);
    padding: 10px;
    display: inline-block;
}

// FLAT BUTTON BASE
@if $unicorn-btn-build-flat {
    #{$unicorn-btn-namespace}-flat {
        $unicorn-btn-background: $unicorn-btn-bgcolor;
        box-shadow: none;
        transition-property: background;
        transition-duration: .3s;
        background: $unicorn-btn-background;
        border: none;
        text-shadow: none;

        &:hover, &:focus {
            background: lighten($unicorn-btn-background, 5%);
        }
        &:active {
          transition-property: background;
          transition-duration: 0s;
          background: desaturate($unicorn-btn-background, 20%);
          color: darken($unicorn-btn-background, 20%);
        }
        &.disabled {
            box-shadow: none;
            -webkit-appearance: none;
        }
    }
}


// BORDER BUTTON BASE
@if $unicorn-btn-build-flat {
    #{$unicorn-btn-namespace}-border {
        box-shadow: none;
        transition-property: all;
        transition-duration: .3s;
        color: $unicorn-btn-font-color;
        border: $unicorn-btn-border-size solid $unicorn-btn-font-color;
        background: none;
        text-shadow: none;

        &:hover, &:focus {
            background: none;
            color: lighten($unicorn-btn-font-color, 10%);
            border: $unicorn-btn-border-size solid lighten($unicorn-btn-font-color, 10%);
        }
        &:active {
            transition-duration: 0s;
            background: none;
            color: darken($unicorn-btn-font-color, 10%);
            border: $unicorn-btn-border-size solid darken($unicorn-btn-font-color, 10%);
        }
        &.disabled {
            box-shadow: none;
            -webkit-appearance: none;
        }
    }
}


// 3D BUTTON BASE
@if $unicorn-btn-build-3d {
    #{$unicorn-btn-namespace}-3d {
        transition-property: all;
        transition-duration: .3s;

        box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .3), inset 0px -1px 1px rgba(255, 255, 255, .15), 0px 7px 0px darken($unicorn-btn-bgcolor, 20%), 0px 8px 3px rgba(0, 0, 0, .2);

        background: linear-gradient(to bottom, lighten($unicorn-btn-bgcolor, 2%) 0%, darken($unicorn-btn-bgcolor, 2%) 100%);

        background-color: $unicorn-btn-bgcolor;
        color: $unicorn-btn-font-color;
        border: 1px solid darken($unicorn-btn-bgcolor, 5%);
        text-shadow: none;
        position: relative;
        top: 0px;

        &:hover, &:focus {
            box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .3), inset 0px -1px 1px rgba(255, 255, 255, .15), 0px 7px 0px darken($unicorn-btn-bgcolor, 20%), 0px 8px 3px rgba(0, 0, 0, .2);
            background: linear-gradient(to bottom, lighten($unicorn-btn-bgcolor, 8%) 0%, darken($unicorn-btn-bgcolor, 1%) 100%);
            background-color: lighten($unicorn-btn-bgcolor, 10%);
        }
        &:active {
            box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .3), inset 0px -1px 1px rgba(255, 255, 255, .15), 0px 2px 0px darken($unicorn-btn-bgcolor, 20%), 0px 3px 3px rgba(0, 0, 0, .2);
            background: linear-gradient(to bottom, lighten($unicorn-btn-bgcolor, 2%) 0%, darken($unicorn-btn-bgcolor, 2%) 100%);
            background-color: desaturate($unicorn-btn-bgcolor, 20%);
            color: darken($unicorn-btn-bgcolor, 20%);
            border: 1px solid darken($unicorn-btn-bgcolor, 5%);
            top: 5px;
        }
        &.disabled {
            box-shadow: none;
            -webkit-appearance: none;
        }
    }
}


//////////////////////////////////////////////////////////
// SHAPES ////////////////////////////////////////////////
//////////////////////////////////////////////////////////
@each $unicorn-btn-style in $unicorn-btn-types {

    // .button-rounded .button-pill button-circle
    #{$unicorn-btn-namespace}-#{$unicorn-btn-style} {

        @if $unicorn-btn-style == 'rounded' {
            border-radius: 3px;
        }

        @else if $unicorn-btn-style == 'pill' {
            border-radius: 50px;
        }

        @else if $unicorn-btn-style == 'circle' {
            border-radius: ($unicorn-btn-circle-size * 2);

            box-shadow: inset 0px 1px 1px rgba(255, 255, 255, .5), 0px 1px 2px rgba(0, 0, 0, .20);
            width: $unicorn-btn-circle-size;
            line-height: $unicorn-btn-circle-size;
            height: $unicorn-btn-circle-size;
            padding: 0px;
            border-width: 4px;
            font-size: $unicorn-btn-largefs;
        }
    }
}


//////////////////////////////////////////////////////////
// ACTION STYLES /////////////////////////////////////////
//////////////////////////////////////////////////////////
@each $unicorn-btn-action in $unicorn-btn-actions {
    //GET NAME & COLOR
    $unicorn-btn-name: nth($unicorn-btn-action, 1);
    $unicorn-btn-background: nth($unicorn-btn-action, 2);
    $unicorn-btn-color: nth($unicorn-btn-action, 3);

    // .button-primary .button-action etc.
    #{$unicorn-btn-namespace}-#{$unicorn-btn-name} {
        background: linear-gradient(to bottom, lighten($unicorn-btn-background, 5%) 0%, darken($unicorn-btn-background, 5%) 100%);
        background-color: $unicorn-btn-background;
        border-color: darken($unicorn-btn-background, 10%);
        color: $unicorn-btn-color;
        text-shadow: 0 -1px 1px rgba(darken($unicorn-btn-background, 30%), 0.35);

        &:hover, &:focus {
            background-color: $unicorn-btn-background;
            background: linear-gradient(to bottom, lighten($unicorn-btn-background, 10%) 0%, darken($unicorn-btn-background, 5%) 100%);
        }
        &:active {
            background: desaturate($unicorn-btn-background, 20%);
            color: darken($unicorn-btn-background, 20%);
        }
    }


    /////////////////////////////
    //3D BUTTON STYLES //////////
    ////////////////////////////
    @if $unicorn-btn-build-3d {

        // .button-border-primary .button-border-action etc.
        #{$unicorn-btn-namespace}-3d-#{$unicorn-btn-name} {
            transition-property: all;
            transition-duration: .3s;

            box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .3), inset 0px -1px 1px rgba(255, 255, 255, .15), 0px 7px 0px darken($unicorn-btn-background, 10%), 0px 8px 3px rgba(0, 0, 0, .30);
            background: linear-gradient(to bottom, lighten($unicorn-btn-background, 2%) 0%, darken($unicorn-btn-background, 2%) 100%);
            background-color: $unicorn-btn-background;
            color: $unicorn-btn-color;
            border: 1px solid darken($unicorn-btn-background, 10%);
            text-shadow: none;
            position: relative;
            top: 0px;

            &:hover, &:focus {
                box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .3), inset 0px -1px 1px rgba(255, 255, 255, .15), 0px 7px 0px darken($unicorn-btn-background, 12%), 0px 8px 3px rgba(0, 0, 0, .30);
                background: linear-gradient(to bottom, lighten($unicorn-btn-background, 8%) 0%, darken($unicorn-btn-background, 1%) 100%);
                background-color: lighten($unicorn-btn-background, 10%);
            }
            &:active {
                box-shadow: inset 0px 1px 0px rgba(255, 255, 255, .3), inset 0px -1px 1px rgba(255, 255, 255, .15), 0px 2px 0px darken($unicorn-btn-background, 10%), 0px 3px 3px rgba(0, 0, 0, .30);
                background: linear-gradient(to bottom, lighten($unicorn-btn-background, 2%) 0%, darken($unicorn-btn-background, 2%) 100%);
                background-color: desaturate($unicorn-btn-background, 20%);
                color: darken($unicorn-btn-background, 20%);
                border: 1px solid darken($unicorn-btn-background, 5%);
                top: 5px;
            }
            &.disabled {
                box-shadow: none;
                -webkit-appearance: none;
            }
        }
    }


    /////////////////////////////
    //BORDER BUTTON STYLES //////
    ////////////////////////////
    @if $unicorn-btn-build-border {

        // .button-border-primary .button-border-action etc.
        #{$unicorn-btn-namespace}-border-#{$unicorn-btn-name} {
            box-shadow: none;
            transition-property: all;
            transition-duration: .3s;
            color: $unicorn-btn-background;
            border: $unicorn-btn-border-size solid $unicorn-btn-background;
            background: none;
            text-shadow: none;

            &:hover, &:focus {
                background: none;
                color: lighten($unicorn-btn-background, 10%);
                border: $unicorn-btn-border-size solid lighten($unicorn-btn-background, 10%);
            }
            &:active {
                transition-duration: 0s;
                background: none;
                color: darken($unicorn-btn-background, 10%);
                border: $unicorn-btn-border-size solid darken($unicorn-btn-background, 10%);
            }
            &.disabled {
                box-shadow: none;
                -webkit-appearance: none;
            }
        }
    }

    //////////////////////////
    //FLAT BUTTON STYLES /////
    //////////////////////////
    @if $unicorn-btn-build-flat {
        // .button-flat-primary .button-flat-action etc.
        #{$unicorn-btn-namespace}-flat-#{$unicorn-btn-name} {
            box-shadow: none;
            transition-property: background;
            transition-duration: .3s;

            background: $unicorn-btn-background;
            color: $unicorn-btn-color;
            text-shadow: none;
            border: none;

            &:hover, &:focus {
                background: lighten($unicorn-btn-background, 5%);
            }
            &:active {
                transition-duration: 0s;
                background: desaturate($unicorn-btn-background, 20%);
                color: darken($unicorn-btn-background, 15%);
            }
            &.disabled {
                box-shadow: none;
                -webkit-appearance: none;
            }
        }
    }
}



//////////////////////////////////////////////////////////
// BUTTON GROUPS /////////////////////////////////////////
//////////////////////////////////////////////////////////
#{$unicorn-btn-namespace}-group {
    position: relative;
    display: inline-block;
    #{$unicorn-btn-namespace} {
        float: left;
        &:focus, &:hover, &.active {
            z-index: 5;
        }
        &.active {
            background: darken($unicorn-btn-bgcolor, 7%);
        }
        //Take rounded corners off all middle buttons
        &:not(:first-child):not(:last-child) {
            border-radius: 0;
        }
        &:first-child {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        &:last-child {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }
    // Remove extra borders
    #{$unicorn-btn-namespace} + #{$unicorn-btn-namespace} {
        margin-left: -1px;
    }

}


//////////////////////////////////////////////////////////
// SIZES /////////////////////////////////////////////////
//////////////////////////////////////////////////////////

@each $unicorn-btn-size in $unicorn-btn-sizes {

    // .button-large .button-small .button-tiny
    #{$unicorn-btn-namespace}-#{$unicorn-btn-size} {

        @if $unicorn-btn-size == 'jumbo' {

            //Defaults to math unless user defines
            $height: $unicorn-btn-height * 1.6;
            @if $unicorn-btn-height-jumbo {
                $height: $unicorn-btn-height-jumbo;
            }

            font-size: $unicorn-btn-largefs + 5;
            height: $height;
            line-height: $height;
            padding: 0px $height * .8;
        }

        @if $unicorn-btn-size == 'large' {

            $height: $unicorn-btn-height * 1.2;
            @if $unicorn-btn-height-large {
                $height: $unicorn-btn-height-large;
            }
            font-size: $unicorn-btn-largefs;
            height: $height;
            line-height: $height;
            padding: 0px $height * .8;
        }

        @if $unicorn-btn-size == 'small' {

            //Defaults to math unless user defines
            $height: $unicorn-btn-height * .8;
            @if $unicorn-btn-height-small {
                $height: $unicorn-btn-height-small;
            }

            font-size: $unicorn-btn-smallfs;
            height: $height;
            line-height: $height;
            padding: 0px $height * .8;
        }

        @if $unicorn-btn-size == 'tiny' {

            //Defaults to math unless user defines
            $height: $unicorn-btn-height * .7;
            @if $unicorn-btn-height-tiny {
                $height: $unicorn-btn-height-tiny;
            }

            font-size: $unicorn-btn-tinyfs;
            height: $height;
            line-height: $height;
            padding: 0px $height * .8;
        }
    }

    //HEIGHT NEEDED FOR FORM ELEMENTS +2px on height
    input#{$unicorn-btn-namespace}-#{$unicorn-btn-size}, button#{$unicorn-btn-namespace}-#{$unicorn-btn-size} {

        @if $unicorn-btn-size == 'large' {

            //Defaults to math unless user defines
            $height: ($unicorn-btn-height * 1.2) + 2;
            @if $unicorn-btn-height-large {
                $height: $unicorn-btn-height-large + 2;
            }
            height: $height;
        }

        @if $unicorn-btn-size == 'small' {

            //Defaults to math unless user defines
            $height: ($unicorn-btn-height * .8) + 2;
            @if $unicorn-btn-height-large {
                $height: $unicorn-btn-height-small + 2;
            }
            height: $height;
        }

        @if $unicorn-btn-size == 'tiny' {

            //Defaults to math unless user defines
            $height: ($unicorn-btn-height * .7) + 2;
            @if $unicorn-btn-height-tiny {
                $height: $unicorn-btn-height-tiny + 2;
            }
            height: $height;
        }
    }
}


//////////////////////////////////////////////////////////
// GLOWING BUTTON STYLES /////////////////////////////////
//////////////////////////////////////////////////////////
@if $unicorn-btn-build-glow {
    #{$unicorn-btn-namespace} {
        &#{$unicorn-btn-glow-namespace} {
            @include glow;
        }
        &#{$unicorn-btn-glow-namespace}:active {
            @include no_animation;
            box-shadow: inset 0px 1px 3px rgba(0, 0, 0, .3), 0px 1px 0px rgba(255, 255, 255, 1);
        }
    }
}


//////////////////////////////////////////////////////////
// DROPDOWN //////////////////////////////////////////////
//////////////////////////////////////////////////////////
@if $unicorn-btn-build-dropdown {
    #{$unicorn-btn-namespace}-dropdown {
        position: relative;
        overflow: visible;
        display: inline-block;

        //EXTRA STYLES FOR CARET
        .button {
            .icon-caret-down {
                font-size: 90%;
                margin: 0px 0px 0px 3px;
                vertical-align: middle;
            }
        }

        ul#{$unicorn-btn-namespace}-dropdown-menu-below {
            top: 115%;
        }
        ul#{$unicorn-btn-namespace}-dropdown-menu-above {
            bottom: 115%;
            top: auto;
        }

        //DROPDOWN MENU STYLES
        ul {
            box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.6);
            border-radius: 3px;
            display: none;
            position: absolute;
            background: $unicorn-btn-dropdown-background;
            top: -2px;
            left: -2px;
            z-index: 1000;
            padding: 0px;
            margin: 0px;
            list-style-type: none;
            min-width: 102%;

            li {
                padding: 0px;
                margin: 0px;
                display: block;

                &:first-child a {
                    border-top-left-radius: 3px;
                    border-top-right-radius: 3px;
                }
                &:last-child a {
                    border-bottom-left-radius: 3px;
                    border-bottom-right-radius: 3px;
                }
            }

            //DROPDOWN MENU DIVIDER
            #{$unicorn-btn-namespace}-dropdown-divider {
                box-shadow: inset 0px 1px 0px #FFF;
                border-top: 1px solid #e4e4e4;
            }

            a {
                display: block;
                padding: 0px 20px;
                text-decoration: none;
                font-size: $unicorn-btn-tinyfs;
                color: $unicorn-btn-dropdown-link-color;
                line-height: 30px;
                white-space: nowrap;

                &:hover, &:focus {
                    background-color: $unicorn-btn-dropdown-link-hover-background;
                    color: $unicorn-btn-dropdown-link-hover;
                }
            }
        }
    }
}
